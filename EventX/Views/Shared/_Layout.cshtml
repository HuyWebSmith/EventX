@{
    ViewData["Title"] = "Home Page";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - EventX</title>
    <script type="importmap"></script>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/style.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/EventX.styles.css" asp-append-version="true" />
    <script src="https://use.fontawesome.com/releases/v6.3.0/js/all.js" crossorigin="anonymous"></script>
    <style>
        #notificationList {
            max-height: 300px; /* chiều cao tối đa */
            overflow-y: auto; /* bật cuộn dọc */
        }

        .notification-item:hover {
            background-color: #f8f9fa;
            cursor: pointer;
        }

        .notification-item.read {
            opacity: 0.9; /* mờ hơn */
            background-color: #f8f9fa; /* nền nhạt hơn */
            cursor: default;
        }

    
        .btnShake {
            animation: shake 0.5s ease-in-out ;
        }

    </style>

</head>
<body class="d-flex flex-column min-vh-100 x">
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <a asp-area="" asp-controller="Home" asp-action="Index">
                    <img src="~/images/ChatGPT Image Apr 17, 2025, 01_12_24 PM.png" class="navbar-brand object-fit-cover" alt="EventX Logo" style="width:95px; height:60px;" />
                </a>

                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse"
                        aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <form class="d-flex me-3" method="get" asp-controller="Home" asp-action="Search">
                    <div class="input-group">
                        <span class="input-group-text" id="search-icon">
                            <i class="fa fa-search"></i>
                        </span>
                        <input type="search" name="query" class="form-control" placeholder="Bạn muốn làm gì?..." aria-label="Search" aria-describedby="search-icon" required>
                        <button class="btn btn-outline-warning text-black" type="submit" style="border-left: 1px solid #ced4da;">Tìm kiếm</button>
                    </div>
                </form>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between align-items-center">
                    <ul class="navbar-nav flex-grow-1"></ul>

                   

                    @if (User.IsInRole("Host"))
                    {
                        <a href="/Host/Event/Add" class="btn btn-warning me-2" style="color:black;">
                            <i class="fa-regular fa-calendar-plus me-1"></i> Tạo sự kiện
                        </a>
                    }

                    <a href="/Ticket/MyTickets" class="btn btn-warning me-2" style="color:black;">
                        <i class="fa-solid fa-ticket"></i> Vé của tôi
                    </a>

                    @if (User.Identity.IsAuthenticated)
                    {
                        <li class="nav-item dropdown me-3 ms-3 list-unstyled">
                            <a class="nav-link position-relative" href="#" id="notificationDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="fa-solid fa-bell fa-lg btnShake"></i>
                                <span id="notificationCount" class="badge bg-danger rounded-pill position-absolute top-0 start-100 translate-middle" style="display:none;">0</span>
                            </a>
                            <ul class="dropdown-menu dropdown-menu-end mt-3 me-2" aria-labelledby="notificationDropdown" style="width: 300px;" id="notificationList">
                                <li class="dropdown-header d-flex justify-content-between align-items-center px-3">
                                    <span class="fw-bold">Thông báo</span>
                                </li>
                                <li><hr class="dropdown-divider"></li>

                            </ul>
                        </li>
                    }
                    
                    <partial name="_LoginPartial" />
                </div>
            </div>
        </nav>
    </header>

    <main role="main" class="flex-fill">
        <div class="container pb-3">
            @RenderBody()
        </div>
    </main>

    <footer class="border-top text-muted mt-5 pt-4 pb-4" style="background-color: #393F4E;">
        <div class="row mx-5 mt-5">
            <!-- Liên hệ -->
            <div class="col-md-4 mb-4 text-white">
                <h5 class="mb-3 fw-semibold">Hotline</h5>
                <p class="mb-1"><i class="bi bi-telephone-fill me-2"></i>1900.6408</p>
                <p class="mb-3">Thứ 2 - Chủ Nhật (8:30 - 23:00)</p>

                <h5 class="mb-3 fw-semibold">Email</h5>
                <p class="mb-3"><i class="bi bi-envelope-fill me-2"></i>support@EventX.vn</p>

                <h5 class="mb-3 fw-semibold">Văn phòng</h5>
                <p><i class="bi bi-geo-alt-fill me-2"></i>Lầu 12, 17 Bà Huyện Thanh Quan, Phường 6, Quận 3, TP. Hồ Chí Minh</p>
            </div>

            <!-- Điều khoản -->
            <div class="col-md-3 mb-4 text-white">
                <h5 class="mb-3 fw-semibold">Dành cho Khách hàng</h5>
                <p><a href="#" class="text-decoration-none text-muted">Điều khoản sử dụng cho khách hàng</a></p>

                <h5 class="mt-4 mb-3 fw-semibold">Dành cho Ban Tổ chức</h5>
                <p><a href="#" class="text-decoration-none text-muted">Điều khoản sử dụng cho ban tổ chức</a></p>

                <h5 class="mt-4 mb-3 fw-semibold">Đăng ký nhận email</h5>
                <form class="d-flex" onsubmit="event.preventDefault(); alert('Cảm ơn bạn đã đăng ký!');">
                    <input type="email" class="form-control me-2" placeholder="Your Email" required>
                    <button type="submit" class="btn btn-primary">Đăng ký</button>
                </form>
            </div>

            <!-- Về công ty & Ứng dụng -->
            <div class="col-md-3 mb-4 text-white ">
                <h5 class="mb-3 fw-semibold">Về công ty chúng tôi</h5>
                <ul class="list-unstyled small d-flex flex-column gap-2 text-white">
                    <li><a href="#" class="text-decoration-none text-muted">Quy chế hoạt động</a></li>
                    <li><a href="#" class="text-decoration-none text-muted">Chính sách bảo mật thông tin</a></li>
                    <li><a href="#" class="text-decoration-none text-muted">Cơ chế giải quyết tranh chấp/khiếu nại</a></li>
                    <li><a href="#" class="text-decoration-none text-muted">Chính sách bảo mật thanh toán</a></li>
                    <li><a href="#" class="text-decoration-none text-muted">Chính sách đổi trả và kiểm hàng</a></li>
                    <li><a href="#" class="text-decoration-none text-muted">Điều kiện vận chuyển và giao nhận</a></li>
                    <li><a href="#" class="text-decoration-none text-muted">Phương thức thanh toán</a></li>
                </ul>

                <h5 class="mt-4 mb-3 fw-semibold">Ứng dụng EventX</h5>
                <p>
                    <a href="#" class="me-2"><img src="chplay.png" alt="chPlay" style="height: 35px;"></a>
                    <a href="#"><img src="appstore.png" alt="appStore" style="height: 35px;"></a>
                </p>
                <p class="small text-muted">Ứng dụng check-in cho Ban tổ chức</p>
                <p>
                    <a href="#" class="me-2"><img src="chplay.png" alt="chPlay" style="height: 35px;"></a>
                    <a href="#"><img src="appstore.png" alt="appStore" style="height: 35px;"></a>
                </p>
            </div>

            <!-- Mạng xã hội & Ngôn ngữ -->
            <div class="col-md-2 mb-4 text-white">
                <h5 class="mb-3 fw-semibold">Follow us</h5>
                <p>
                    <a href="#" class="text-muted me-3 fs-4"><i class="bi bi-facebook"></i></a>
                    <a href="#" class="text-muted me-3 fs-4"><i class="bi bi-instagram"></i></a>
                    <a href="#" class="text-muted me-3 fs-4"><i class="bi bi-tiktok"></i></a>
                    <a href="#" class="text-muted me-3 fs-4"><i class="bi bi-twitter"></i></a>
                    <a href="#" class="text-muted me-3 fs-4"><i class="bi bi-linkedin"></i></a>
                </p>

                <h5 class="mt-4 mb-3 fw-semibold">Ngôn ngữ</h5>
                <select class="form-select form-select-sm w-auto">
                    <option selected>Tiếng Việt</option>
                    <option>English</option>
                </select>
            </div>
        </div>

        <hr class="my-4">

        <div class="small text-white d-flex ms-5">
            <div class="me-5">
                Hệ thống quản lý và phân phối vé sự kiện hàng đầu Việt Nam EventX Co. Ltd. © 2025<br />
            </div>

            Công ty TNHH EventX<br />
            Đại diện theo pháp luật: XXXXXXXXX<br />
            Địa chỉ:TP. Hồ Chí Minh<br />
            Hotline: XXXX.XXXX - Email: support@EventX.vn
        </div>
    </footer>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        async function loadNotifications() {
            try {
                const res = await fetch('/Home/GetNotifications');
                if (!res.ok) throw new Error('Failed to load notifications');
                const notifications = await res.json();
                const unreadCount = notifications.filter(n => !n.isRead).length;

                const badge = document.getElementById('notificationCount');
                const noNotifEl = document.getElementById('noNotification');
                const listEl = document.getElementById('notificationList');
                const bellIcon = document.querySelector('#notificationDropdown i.fa-bell');

                // Xóa các thông báo cũ (trừ header, divider, noNotification)
                [...listEl.querySelectorAll('li')].forEach(li => {
                    if (
                        !li.classList.contains('dropdown-header') &&
                        !li.querySelector('hr') &&
                        li.id !== 'noNotification'
                    ) {
                        li.remove();
                    }
                });

                if (notifications.length === 0) {
                    noNotifEl.style.display = 'block';
                    badge.style.display = 'none';
                    if (bellIcon) bellIcon.classList.remove('btnShake');
                    return;
                }


                        // Cập nhật badge và hiệu ứng rung
            if (unreadCount > 0) {
                badge.style.display = 'inline-block';
                badge.textContent = unreadCount;

                if (bellIcon && !bellIcon.classList.contains('btnShake')) {
                    bellIcon.classList.add('btnShake');

                    // Remove class sau khi animation kết thúc
                    bellIcon.addEventListener('animationend', () => {
                        bellIcon.classList.remove('btnShake');
                    }, { once: true });
                }
            } else {
                badge.style.display = 'none';
                if (bellIcon) bellIcon.classList.remove('btnShake');
            }


                // Tạo các item thông báo
                notifications.forEach(notif => {
                    const li = document.createElement('li');
                    li.classList.add('px-3', 'py-2', 'border-bottom', 'notification-item');
                    li.style.cursor = 'pointer';

                    if (notif.isRead) {
                        li.classList.add('text-muted', 'read');
                        li.style.fontWeight = 'normal';
                    } else {
                        li.style.fontWeight = 'bold';
                    }

                    li.title = notif.message;

                    const createdAt = new Date(notif.createdAt);
                    const dateStr = isNaN(createdAt) ? '' : createdAt.toLocaleString();

                    li.innerHTML = `
                        <div class="d-flex align-items-center justify-content-between">
                            <div>${notif.message}</div>
                            <small class="text-muted ms-2">${dateStr}</small>
                        </div>
                    `;

                    // Khi click vào thông báo
                            li.addEventListener('click', async () => {
            if (!notif.isRead) {
                try {
                    const resMarkRead = await fetch(`/Home/MarkNotificationRead/${notif.id}`, { method: 'POST' });
                    if (resMarkRead.ok) {
                        notif.isRead = true;
                        li.classList.remove('fw-bold');
                        li.classList.add('text-muted', 'read');
                        li.style.fontWeight = 'normal';
                        // Cập nhật badge số lượng
                        unreadCount--;
                        if (unreadCount > 0) {
                            badge.textContent = unreadCount;
                        } else {
                            badge.style.display = 'none';
                                    if (bellIcon) bellIcon.classList.remove('btnShake');
                                }
                            }
                        } catch (error) {
                            console.error('Error marking notification read:', error);
                        }
                    }
                });


                    listEl.appendChild(li);
                });

            } catch (err) {
                console.error(err);
            }
        }

        document.addEventListener('DOMContentLoaded', () => {
            const bellIcon = document.querySelector('#notificationDropdown i.fa-bell');
            const dropdown = document.getElementById('notificationDropdown');

            if (dropdown && bellIcon) {
                dropdown.addEventListener('show.bs.dropdown', () => {
                    bellIcon.classList.remove('btnShake');
                });
            }

            loadNotifications();
            setInterval(loadNotifications, 60000);
        });
    </script>



    @RenderSection("Scripts", required: false)
</body>
</html>
