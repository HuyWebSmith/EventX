@{
    ViewData["Title"] = "Home Page";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using EventX.Models
@model EventX.ViewModels.HomeViewModel

<style>

    .swiper-slide {
        display: flex;
        justify-content: center;
        align-items: flex-start;
        height: 400px;
        width: 100%; 
    }

    .card {
        display: flex;
        flex-direction: column;
        height: 100%; 
        overflow: hidden;
        border: none;
    }

    /* Xử lý hình ảnh card-img-top */
    .card-img-top {
        object-fit: cover; /* Đảm bảo hình ảnh không bị méo */
        height: 180px; /* Chiều cao hình ảnh cố định */
    }

    /* Thiết lập cho phần card-body */
    .card-body {
        flex-grow: 1;
        padding: 10px;
        overflow: hidden; /* Ngăn ngừa việc nội dung bị tràn */
    }

    .banner-swiper-container {
        position: relative;
        width: 100%;
        height: 500px;
        margin-bottom: 30px;
        border-radius: 10px;
        overflow: hidden;
        
    }

    .swiper-slide img {
        width: 100%; /* Đảm bảo ảnh chiếm hết chiều rộng */
        height: 100%; /* Đảm bảo ảnh chiếm hết chiều cao */
        object-fit: contain; /* Đảm bảo ảnh không bị méo mà vẫn đầy đủ */
    }
    .swiper-pagination {
        position: absolute;
        bottom: 10px;
        left: 50%;
        transform: translateX(-50%);
        z-index: 10; /* Đảm bảo pagination nằm trên các ảnh */
        color: white;
    }

    .swiper-button-next, .swiper-button-prev {
        font-size: 20px; 
        z-index: 10;
        
        padding: 10px; /* Tạo khoảng cách giữa biểu tượng và viền */
        transition: background-color 0.3s ease, transform 0.3s ease; /* Thêm hiệu ứng khi hover */
    }



        .swiper-button-next:hover {
            color: white !important;
            background-color: rgba(0, 0, 0, 0.5);
            transform: scale(1.2);
            border-top-left-radius: 5px;
            border-bottom-left-radius: 5px;
        }

        .swiper-button-prev:hover {
            color: white !important;
            background-color: rgba(0, 0, 0, 0.5);
            transform: scale(1.2);
            border-top-right-radius: 5px;
            border-bottom-right-radius: 5px;
        }


    .swiper-button-next {
        right: 20px;
    }

    .swiper-button-prev {
        left: 20px;
    }

    .btn-detail {
        position: absolute;
        bottom: 20px; /* Đặt nút ở phía dưới của ảnh */
        left: 25%;
        transform: translateX(-50%); /* Canh giữa */
        background-color: rgba(0, 0, 0, 0.5); /* Màu nền bán trong suốt */
        color: white;
        padding: 10px 20px;
        font-size: 16px;
        border-radius: 5px;
        text-align: center;
        cursor: pointer;
        z-index: 10; /* Đảm bảo nút không bị che khuất */
        transition: background-color 0.3s ease; /* Hiệu ứng khi hover */
        text-decoration: none;
    }

        .btn-detail:hover {
            background-color: rgba(0, 0, 0, 0.7); /* Thay đổi màu nền khi hover */
        }
</style>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css" />
<div class="swiper-container banner-swiper-container mb-5">
    <div class="swiper-wrapper">
        @foreach (var slider in Model.Sliders)
        {
            <div class="swiper-slide banner-swiper-slide">
                    <img src="@Url.Content(slider.ImageUrl)" alt="@slider.Title" />
                    <a href="@slider.Link" target="_blank" class="btn-detail">Xem chi tiết</a>
            </div>
        }
    </div>

    <!-- Các nút điều khiển -->
    <div class="swiper-button-next banner-swiper-button-next text-secondary"></div>
    <div class="swiper-button-prev banner-swiper-button-prev text-secondary"></div>
    <div class="swiper-pagination"></div> <!-- Nếu bạn muốn sử dụng pagination -->
</div>

    @{
        var workshops = Model.Events.Where(e => e.Category.CategoryId == 6).ToList();
        var seminars = Model.Events.Where(e => e.Category.CategoryId == 5).ToList();
        var events = Model.Events.Where(e => e.Category.CategoryId == 12).ToList();
    }

    <!-- PHẦN WORKSHOP -->
@if (events.Any())
    {
        <h4 class="mt-4">Sự kiện</h4>
        <div class="swiper mySwiper">
            <div class="swiper-wrapper">
            @foreach (var eventItem in events)
                {
                    <div class="swiper-slide">
                        <div class="swiper-slide">
                            <a href="@Url.Action("Display", "Home", new { eventId = eventItem.EventID })"
                               class="text-decoration-none text-dark">
                                <div class="card" style="width: 18rem; cursor: pointer;">
                                    @foreach (var image in eventItem.EventImages)
                                    {
                                        <img src="@image.ImageURL" class="card-img-top" alt="Event Image" style="object-fit: contain; height: 180px;">
                                    }

                                    <div class="card-body">
                                        <h5 class="card-title" style="font-size: 16px; font-weight: bold;">@eventItem.Title</h5>

                                        @if (eventItem.Tickets != null && eventItem.Tickets.Any())
                                        {
                                            <p class="card-text" style="font-size: 14px;">
                                                Giá vé từ:
                                                <strong>@eventItem.Tickets.Min(t => t.Price).ToString("N0")₫</strong>
                                            </p>
                                        }

                                        <p class="card-text" style="font-size: 13px; color: gray;">
                                            Bắt đầu: @eventItem.EventStartTime.ToString("dd/MM/yyyy HH:mm")
                                        </p>
                                    </div>
                                </div>
                            </a>
                        </div>
                    </div>
                }
            </div>
            <div class="swiper-button-next"></div>
            <div class="swiper-button-prev"></div>
        </div>
    }
    else
    {
        <!-- Nếu không có sự kiện, hiển thị phần trống với thông báo -->
        <h4 class="mt-4">Sự kiện</h4>
        <div class="swiper-wrapper">
            <div class="swiper-slide">
                <div class="card" style="width: 18rem; height: 200px;">
                    <div class="card-body d-flex justify-content-center align-items-center">
                        <p class="text-center" style="font-size: 16px; color: gray;">Chưa có sự kiện nào</p>
                    </div>
                </div>
            </div>
        </div>
    }
    @if (workshops.Any())
    {
        <h4 class="mt-4">Workshop</h4>
        <div class="swiper mySwiper">
            <div class="swiper-wrapper">
                @foreach (var eventItem in workshops)
                {
                    <div class="swiper-slide">
                        <div class="swiper-slide">
                            <a href="@Url.Action("Display", "Home", new { eventId = eventItem.EventID })"
                               class="text-decoration-none text-dark">
                                <div class="card" style="width: 18rem; cursor: pointer;">
                                    @foreach (var image in eventItem.EventImages)
                                    {
                                        <img src="@image.ImageURL" class="card-img-top" alt="Event Image" style="object-fit: contain; height: 180px;">
                                    }

                                    <div class="card-body">
                                        <h5 class="card-title" style="font-size: 16px; font-weight: bold;">@eventItem.Title</h5>

                                        @if (eventItem.Tickets != null && eventItem.Tickets.Any())
                                        {
                                            <p class="card-text" style="font-size: 14px;">
                                                Giá vé từ:
                                                <strong>@eventItem.Tickets.Min(t => t.Price).ToString("N0")₫</strong>
                                            </p>
                                        }

                                        <p class="card-text" style="font-size: 13px; color: gray;">
                                            Bắt đầu: @eventItem.EventStartTime.ToString("dd/MM/yyyy HH:mm")
                                        </p>
                                    </div>
                                </div>
                            </a>
                        </div>
                    </div>
                }
            </div>
            <div class="swiper-button-next"></div>
            <div class="swiper-button-prev"></div>
        </div>
    }
    else
    {
        <!-- Nếu không có sự kiện, hiển thị phần trống với thông báo -->
        <h4 class="mt-4">Workshop</h4>
        <div class="swiper-wrapper">
            <div class="swiper-slide">
                <div class="card" style="width: 18rem; height: 200px;">
                    <div class="card-body d-flex justify-content-center align-items-center">
                        <p class="text-center" style="font-size: 16px; color: gray;">Chưa có sự kiện nào</p>
                    </div>
                </div>
            </div>
        </div>
    }

    <!-- PHẦN HỘI THẢO -->
    @if (seminars.Any())
    {
        <h4 class="mt-5 mb-4">Hội thảo</h4>
        <div class="swiper mySwiper2">
            <div class="swiper-wrapper">
                @foreach (var eventItem in seminars)
                {
                    <div class="swiper-slide">
                        <div class="swiper-slide">
                            <a href="@Url.Action("Display", "Home", new { eventId = eventItem.EventID })"
                               class="text-decoration-none text-dark">
                                <div class="card" style="width: 18rem; cursor: pointer;">
                                    @foreach (var image in eventItem.EventImages)
                                    {
                                        <img src="@image.ImageURL" class="card-img-top" alt="Event Image" style="object-fit: contain; height: 180px;">
                                    }

                                    <div class="card-body">
                                        <h5 class="card-title" style="font-size: 16px; font-weight: bold;">@eventItem.Title</h5>

                                        @if (eventItem.Tickets != null && eventItem.Tickets.Any())
                                        {
                                            <p class="card-text" style="font-size: 14px;">
                                                Giá vé từ:
                                                <strong>@eventItem.Tickets.Min(t => t.Price).ToString("N0")₫</strong>
                                            </p>
                                        }

                                        <p class="card-text" style="font-size: 13px; color: gray;">
                                            Bắt đầu: @eventItem.EventStartTime.ToString("dd/MM/yyyy HH:mm")
                                        </p>
                                    </div>
                                </div>
                            </a>
                        </div>
                    </div>
                }
            </div>
            <div class="swiper-button-next"></div>
            <div class="swiper-button-prev"></div>
        </div>
    }
    else
    {
        <!-- Nếu không có sự kiện, hiển thị phần trống với thông báo -->
        <h4 class="mt-5">Hội thảo</h4>
        <div class="swiper-wrapper">
            <div class="swiper-slide">
                <div class="card" style="width: 18rem; height: 200px;">
                    <div class="card-body d-flex justify-content-center align-items-center">
                        <p class="text-center" style="font-size: 16px; color: gray;">Chưa có sự kiện nào</p>
                    </div>
                </div>
            </div>
        </div>
    }
    

<script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>
<!-- Khởi tạo sau khi đã load JS -->
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Initialize swiper for workshops section
        const swiper1 = new Swiper('.mySwiper', {
            slidesPerView: 4,
            spaceBetween: 20,
            navigation: {
                nextEl: '.swiper-button-next',
                prevEl: '.swiper-button-prev',
            },
            loop: false,
        });

        // Initialize swiper for seminars section
        const swiper2 = new Swiper('.mySwiper2', {
            slidesPerView: 4,
            spaceBetween: 20,
            navigation: {
                nextEl: '.swiper-button-next',
                prevEl: '.swiper-button-prev',
            },
            loop: false,
        });
    });

          document.addEventListener('DOMContentLoaded', function () {
        // Initialize swiper for banner section
        var swiperBanner = new Swiper('.banner-swiper-container', {
            loop: true, // Quay lại đầu khi đến cuối
            autoplay: {
                delay: 5000, // Thời gian chuyển banner (5s)
                disableOnInteraction: false, // Đảm bảo autoplay không bị dừng khi người dùng tương tác
            },
            navigation: {
                nextEl: '.swiper-button-next',
                prevEl: '.swiper-button-prev',
            },
            pagination: {
                el: '.swiper-pagination',
                clickable: true, // Cho phép người dùng nhấn vào các chấm pagination
            },
        });

        // Initialize swiper for workshops section
        const swiper1 = new Swiper('.mySwiper', {
            slidesPerView: 4,
            spaceBetween: 20,
            navigation: {
                nextEl: '.swiper-button-next',
                prevEl: '.swiper-button-prev',
            },
            loop: false,
        });

        // Initialize swiper for seminars section
        const swiper2 = new Swiper('.mySwiper2', {
            slidesPerView: 4,
            spaceBetween: 20,
            navigation: {
                nextEl: '.swiper-button-next',
                prevEl: '.swiper-button-prev',
            },
            loop: false,
        });
    });

</script>
