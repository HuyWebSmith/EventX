@{
    ViewData["Title"] = "Home Page";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using EventX.Enums
@using EventX.Models
@model EventX.Models.Event

<style>
    .ticket-wrapper {
        width: 1280px;
        height: 470px;
        margin: auto;
        display: flex;
        background: #1f1f1f;
        border-radius: 20px;
        overflow: hidden;
        color: white;
        font-family: 'Segoe UI', sans-serif;
        position: relative;
    }

    .ticket-left {
        width: 470px;
        height: 470px;
        padding: 20px;
        background-color: #38383D;
        position: relative;
        color: white;
        z-index: 1;
    }

        .ticket-left h2 {
            font-weight: bold;
            font-size: 24px;
        }

        .ticket-left p {
            margin: 10px 0;
            color: #ccc;
        }

        .ticket-left .price {
            font-size: 24px;
            color: #00e676;
            font-weight: bold;
        }

        .ticket-left .btn-back {
            margin-top: 20px;
            color: white;
        }

        /* Đường răng cưa giữa với nét đứt to hơn */
        .ticket-left::after {
            content: "";
            position: absolute;
            width: 20px; /* Chiều rộng đường răng cưa */
            height: 100%;
            top: 0;
            right: -18px;
            border-left: 5px dashed #1f1f1f; /* Đường nét đứt to hơn */
        }

    .ticket-right {
        width: calc(100% - 470px);
        height: 470px;
        background-size: cover;
        background-position: center;
        position: relative;
    }

    /* Bán hình tròn đầu bên trái */
    .half-circle-top {
        width: 80px; /* Kích thước bán hình tròn */
        height: 75px;
        top: 0px;
        right: -10px;
        transform: translate(2.15rem, -2rem);
        background-color: #fff;
        position: absolute;
        border-bottom-right-radius: 50%;
        border-bottom-left-radius: 50%;
        z-index:2;
    }

    /* Bán hình tròn đầu bên phải */
    .half-circle-bottom {
        width: 80px; /* Kích thước bán hình tròn */
        height: 75px;
        bottom: -38px;
        right: -41px;
        /* transform: translate(25.75rem, 25rem); */
        background-color: #fff;
        position: absolute;
        border-top-left-radius: 50%;
        border-top-right-radius: 50%;

        z-index: 2;
    }

    .event-description {
        max-height: 300px;
        overflow: hidden;

        transition: max-height 0.5s ease;
    }

        .event-description.expanded {
            max-height: none;
        }

    .arrow {
        display: inline-block;
        transition: transform 0.3s ease;
    }

        .arrow.rotate {
            transform: rotate(180deg);
        }

    #toggleButton {
        font-weight: bold;
        color: #007bff;
        text-decoration: none;
        border: none;
        background: none;
        cursor: pointer;
    }

        #toggleButton:hover {
            text-decoration: underline;
        }

    .ticket-box {
        margin: auto;
        width:60%;
        background-color: #222;
        color: #fff;
        padding: 20px;
        border-radius: 10px;
    }

    .ticket-info {
        max-height: 0;
        overflow: hidden;
        transition: max-height 0.4s ease;
        color: #ddd;
    }

        .ticket-info.show {
            max-height: 300px;
        }

    .event-time-toggle {
        cursor: pointer;
        user-select: none;
        transition: color 0.2s;
    }

        .event-time-toggle:hover {
            color: #0d6efd;
        }

    .arrow-down {
        transition: transform 0.3s ease;
        display: inline-block;
        margin-left: 5px;
    }

        .arrow-down.rotate {
            transform: rotate(180deg);
        }

    .description-overlay {
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        height: 80px; /* độ cao lớp mờ */
        background: linear-gradient(to bottom, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 1) 100%);
        pointer-events: none; /* cho phép bấm nút bên trên */
    }

    /* Nút với màu nền xanh lá #2DC275 */
    /* Nút với màu nền xanh lá #2DC275 */
    .custom-btn {
        background-color: #2DC275;
        color: white;
        font-weight: bold;
        border: none;
        padding: 10px 20px;
        text-align: center;
        border-radius: 5px;
        transition: background-color 0.3s ease, color 0.3s ease;
    }

    /* Hover effect */
    .custom-btn:hover {
        background-color: white; /* Đổi nền thành trắng khi hover */
        color: #2DC275; /* Đổi màu chữ thành xanh lá */
    }

    /* Thêm hiệu ứng khi nhấn */
    .custom-btn:active {
        background-color: #22a157; /* Màu xanh lá khi nhấn */
        color: white; /* Màu chữ giữ nguyên khi nhấn */
    }

    .alert {
       display: inline-block; /* Để chiếm diện tích chỉ vừa đủ nội dung */
        padding: 5px 10px; /* Padding vừa đủ cho chữ */
        font-weight: bold;
        border-radius: 5px;
        text-align: center;
        margin-bottom: 10px;
        box-sizing: border-box; /* Đảm bảo padding không làm ảnh hưởng đến chiều rộng */
    }

    .alert-danger {
        background-color: #f44336; /* Màu đỏ */
        color: white;
        font-size: 0.7em;
    }

    .alert-warning {
        background-color: #ff9800; /* Màu cam */
        color: white;
        font-size: 0.7em;
    }
    .title {
  display: -webkit-box;
  -webkit-line-clamp: 2; /* Giới hạn 2 dòng */
  -webkit-box-orient: vertical;  
  overflow: hidden;
  text-overflow: ellipsis;
}


 .location {
     display: -webkit-box;
  -webkit-line-clamp: 2; /* Giới hạn 2 dòng */
  -webkit-box-orient: vertical;  
  overflow: hidden;
  text-overflow: ellipsis;

 }

 .star-rating {
        direction: rtl;
        font-size: 2rem;
        unicode-bidi: bidi-override;
        display: inline-flex;
        gap: 0.25rem;
        cursor: pointer;
    }
    .star-rating input {
        display: none;
    }
    .star-rating label {
        color: #ccc;
        transition: color 0.2s;
    }
    .star-rating input:checked ~ label,
    .star-rating label:hover,
    .star-rating label:hover ~ label {
        color: #ffc107; /* Màu vàng */
    }
</style>

<div class="ticket-wrapper shadow-lg mt-5">
    
    <div class="ticket-left">
        <div class="half-circle-top"></div>
        <div class="half-circle-bottom"></div>
        <h2 class="title" title="[@Model.Locations.First().City] @Model.Title">
          [@Model.Locations.First().City] @Model.Title
        </h2>

        <p><i class="fa fa-calendar me-2"></i><span class="text-success fw-bold">@Model.EventStartTime.ToString("HH:mm") - @Model.EventEndTime.ToString("HH:mm"), @Model.EventStartTime.ToString($"dd.MM.yyyy")</span></p>
       <div class="location">
          <i class="fa-solid fa-location-dot me-2"></i>
          <span class="text-success fw-bold">@Model.Locations.First().Name</span><br />
          <a href="https://www.google.com/maps/search/?api=1&query=@(Uri.EscapeDataString(@Model.Locations.First().Name + ", " +Model.Locations.First().FullAddress + ", " + Model.Locations.First().Ward + ", " + Model.Locations.First().District + ", " + Model.Locations.First().City))"
             target="_blank"
             title="@Model.Locations.First().FullAddress, @Model.Locations.First().Ward, @Model.Locations.First().District, @Model.Locations.First().City"
             class="address text-decoration-none text-white ">
            @Model.Locations.First().FullAddress, @Model.Locations.First().Ward, @Model.Locations.First().District, @Model.Locations.First().City
          </a>
        </div>


        <hr style="border-color: #444;">

        <hr style="border: none; height: 2px; background-color: white; margin-top: 100px; margin-bottom:20px;" />

         <p class="price">
            Giá từ @Model.Tickets.First().Price.ToString("C", new System.Globalization.CultureInfo("vi-VN"))
        </p>
        
       @if (Model.Status == EventStatus.Completed)
        {
            <a href="#" class="btn btn-secondary w-100 py-2 mt-3 disabled" tabindex="-1" aria-disabled="true">
                Sự kiện đã kết thúc
            </a>
        }
        else
        {
            <a href="@Url.Action("Select", "Ticket", new { eventID = Model.EventID })" class="btn custom-btn w-100 py-2 mt-3">
                Mua Vé Ngay
            </a>
        }

    </div>

    @foreach (var image in Model.EventImages)
    {
        <div class="ticket-right" style="background-image: url('@image.ImageURL');">
            <!-- Background sẽ là banner -->
        </div>
    }
</div>

<div class="row mb-4">
    <h3 class="h5 mt-5">Giới thiệu</h3>
    <hr />
    <div class="col-md-12 text-center">
        
        <div class="position-relative mt-4">
            <div id="eventDescription" class="event-description">@Html.Raw(Model.Description)</div>
            <div id="descOverlay" class="description-overlay"></div>
        </div>

        <div id="toggleButtonContainer" class="text-center mt-3">
            <button id="toggleButton" class="btn btn-link">
                <span class="text">Xem thêm</span> <span class="arrow">&#8595;</span>
            </button>
        </div>
    </div>
</div>

<div class="ticket-box mt-5">
    <h3 class="h5 d-flex justify-content-between">
        Thông tin vé
        @if (Model.Status == EventStatus.Completed)
    {
        <a href="#" class="btn btn-secondary w-25 h-25 mt-1 disabled" tabindex="-1" aria-disabled="true">
            Đã kết thúc
        </a>
    }
    else
    {
        <a href="@Url.Action("Select", "Ticket", new { eventID = Model.EventID })" class="btn custom-btn w-25 h-25 mt-1">
            Mua Vé Ngay
        </a>
    }

    </h3>

    <hr />
    @{
        var ticketsByDate = Model.Tickets
        .GroupBy(t => t.StartDate)
        .OrderBy(g => g.Key);
    }

    @foreach (var group in ticketsByDate)
    {
        var dateString = group.Key.ToString("HH:mm dd/MM/yyyy");
        var toggleId = "toggle_" + dateString.Replace("/", "");

        <div class="event-time-toggle mt-2" onclick="toggleTicketInfo('@toggleId')">
            <p>
                <span id="icon_@toggleId" class="arrow-down">&#9660;</span>
                @dateString
            </p>
            
        </div>

        <div id="@toggleId" class="ticket-info ps-3 mt-2">
            @foreach (var ticket in group.Select((ticket, index) => new { ticket, index }))
            {
                var rowClass = ticket.index % 2 == 0 ? "bg-dark text-white" : "bg-light-subtle text-dark";
                <div class="d-flex justify-content-between p-2 @rowClass">
                    <span>@ticket.ticket.Description</span>
                     @if (ticket.ticket.TrangThai == TicketStatus.HetVe)
                    {
                        <div class="alert alert-danger fw-bold text-center">HẾT VÉ</div>
                    }
                    else if (ticket.ticket.TrangThai == TicketStatus.HetHan)
                    {
                        <div class="alert alert-warning fw-bold text-center">ĐÃ HẾT HẠN</div>
                    }else if (ticket.ticket.TrangThai == TicketStatus.ConVe)
                    {
                         <strong class="text-success">
                             @ticket.ticket.Price.ToString("C", new System.Globalization.CultureInfo("vi-VN"))
                        </strong>
                    }
           
                </div>
            }
        </div>

    }


</div>
<h3 class="h5 mt-5">Thông tin Ban tổ chức</h3>
<hr />
<div class="col-12 d-flex mt-4 justify-content-start gap-5 mb-5">
    
    <div>
        @if (!string.IsNullOrEmpty(Model.OrganizerLogoUrl))
        {
            <img src="@Model.OrganizerLogoUrl" alt="Logo" style="max-width: 150px; border-radius: 10px;" />
        }
    </div>
    <div class="mt-2">

        <p><strong>@Model.OrganizerName</strong> </p>
        <p><strong>Email:</strong> @Model.OrganizerEmail</p>
        <p> @Model.OrganizerInfo</p>
    </div>
</div>
@if (Model.Reviews != null && Model.Reviews.Any())
{
    <div class="mt-5">
        <h4 class="mb-4 fw-bold" style="font-size: 1.5rem;">
            Đánh giá
        </h4>

        <div class="list-group shadow-sm rounded" style="max-height: 350px; overflow-y: auto; scrollbar-width: thin;">
            @foreach (var review in Model.Reviews.OrderByDescending(r => r.CreatedAt).Take(5))
            {
                <div class="list-group-item bg-white mb-3 border rounded p-3" style="box-shadow: 0 2px 6px rgb(0 0 0 / 0.1);">
                    <div class="d-flex justify-content-between align-items-center mb-2">
                        <strong class="text-secondary" style="font-weight: 600; font-size: 1rem;">
                            @(review.User?.FullName ?? "Người dùng ẩn danh")
                        </strong>

                        <small class="text-muted" style="font-size: 0.85rem;">@review.CreatedAt.ToString("dd/MM/yyyy")</small>
                    </div>
                    <div class="mb-3" style="font-size: 1.1rem; line-height: 1;">
                        @for (int i = 1; i <= 5; i++)
                        {
                            if (i <= review.Rating)
                            {
                                <span class="text-warning" style="cursor: default;">&#9733;</span>
                            }
                            else
                            {
                                <span class="text-muted" style="cursor: default;">&#9734;</span>
                            }
                        }
                    </div>

                </div>
            }
        </div>
    </div>
}
else
{
    <p class="text-muted mt-4 fst-italic">Chưa có đánh giá nào cho sự kiện này.</p>
}

<hr class="my-5" />

<!-- Form thêm đánh giá mới -->
<div class="mt-4">
    <h5>⭐ Gửi đánh giá của bạn</h5>

    <form method="post" asp-controller="Home" asp-action="Create" asp-route-eventId="@Model.EventID">
    <div class="mb-3">
        <div class="star-rating" role="radiogroup" aria-labelledby="rating-label">
            <input type="radio" id="star5" name="Rating" value="5" />
            <label for="star5" title="5 sao">&#9733;</label>

            <input type="radio" id="star4" name="Rating" value="4" />
            <label for="star4" title="4 sao">&#9733;</label>

            <input type="radio" id="star3" name="Rating" value="3" />
            <label for="star3" title="3 sao">&#9733;</label>

            <input type="radio" id="star2" name="Rating" value="2" />
            <label for="star2" title="2 sao">&#9733;</label>

            <input type="radio" id="star1" name="Rating" value="1" />
            <label for="star1" title="1 sao">&#9733;</label>
        </div>
    </div>

    <div class="mb-3">
        <label for="comment" class="form-label">Nội dung đánh giá</label>
        <textarea class="form-control" id="comment" name="Comment" rows="3" placeholder="Viết nhận xét của bạn..." required></textarea>
    </div>

    <button type="submit" class="btn btn-primary">Gửi đánh giá</button>
</form>
</div>


<script>
    const toggleButton = document.getElementById("toggleButton");
    const eventDesc = document.getElementById("eventDescription");
    const arrow = toggleButton.querySelector(".arrow");
    const text = toggleButton.querySelector(".text");

        toggleButton.addEventListener("click", () => {
        eventDesc.classList.toggle("expanded");
        arrow.classList.toggle("rotate");

        const overlay = document.getElementById("descOverlay");
        if (eventDesc.classList.contains("expanded")) {
            text.textContent = "Ẩn bớt";
            overlay.style.display = "none";
        } else {
            text.textContent = "Xem thêm";
            overlay.style.display = "block";
        }
    });


        function toggleTicketInfo(id) {
        const div = document.getElementById(id);
        const icon = document.getElementById("icon_" + id);
        div.classList.toggle("show");
        icon.innerHTML = div.classList.contains("show") ? "&#9650;" : "&#9660;";
    }


</script>