@using EventX.Enums
@using EventX.Models
@model List<EventX.Models.Event>
@{
    ViewData["Title"] = "Sự kiện của tôi";
}

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .event-card {
            border-radius: 1rem;
            background-size: cover;
            background-position: center;
            color: white;
            position: relative;
            overflow: hidden;
            box-shadow: 0 8px 16px rgba(0,0,0,0.3);
            transition: transform 0.3s ease-in-out;
        }

            .event-card:hover {
                transform: scale(1.01);
            }


        .event-content h5,
        .event-content p,
        .event-content span {
            text-shadow: 0 0 6px rgba(0, 0, 0, 0.8);
        }


        .event-actions a,
        .event-actions button {
            background-color: rgba(255, 255, 255, 0.1);
            color: white;
            border: 1px solid rgba(255, 255, 255, 0.2);
            transition: all 0.2s ease-in-out;
        }

            .event-actions a:hover,
            .event-actions button:hover {
                background-color: rgba(255, 255, 255, 0.25);
                color: #fff;
                border-color: #fff;
            }

        .event-content h5 {
            font-size: 1.25rem;
            font-weight: bold;
            margin-bottom: 0.5rem;
        }

        .status-badge {
            font-size: 0.9rem;
            padding: 0.4rem 0.8rem;
            border-radius: 1rem;
            font-weight: 500;
        }

    </style>
</head>
<body>
    <div class="container mt-4">
        @if (Model != null && Model.Any())
        {
            @foreach (var eventItem in Model)
            {
                var backgroundImageUrl = eventItem.EventImages?.FirstOrDefault()?.ImageURL ?? Url.Content("~/images/default-event.jpg");

                string badgeColor = eventItem.Status switch
                {
                    EventStatus.Pending => "warning",
                    EventStatus.Approved => "success",
                    EventStatus.Rejected => "danger",
                    EventStatus.Scheduled => "info",
                    EventStatus.Ongoing => "primary",
                    EventStatus.Completed => "secondary",
                    EventStatus.Cancelled => "dark",
                    _ => "secondary"
                };

                <div class="event-card position-relative text-white mb-4 rounded shadow" style="background-image: url('@backgroundImageUrl'); background-size: cover; background-position: center; overflow: hidden;">
                    <div class="overlay position-absolute w-100 h-100" style="background-color: rgba(0,0,0,0.5); top: 0; left: 0;"></div>

                 

                    <div class="event-content position-relative p-3">

                        <h5>@eventItem.Title</h5>
                        <p>
                            <i class="fa-solid fa-calendar me-2"></i>
                            @eventItem.EventStartTime.ToString("dd/MM/yyyy HH:mm") - @eventItem.EventEndTime.ToString("dd/MM/yyyy HH:mm")
                        </p>
                        

                        @if (eventItem.Locations != null && eventItem.Locations.Any())
                        {
                            var location = eventItem.Locations.First();
                            <p><i class="fa-solid fa-location-dot me-2"></i>@location.Name, @location.FullAddress, @location.Ward, @location.District, @location.City</p>
                        }
                        else
                        {
                            <p>Không có địa điểm.</p>
                        }
                        <span class="badge bg-@badgeColor status-badge" data-event-id="@eventItem.EventID">@eventItem.Status.ToVietnamese()</span>
                    </div>

                    <div class="event-actions position-relative d-flex flex-wrap gap-3 justify-content-center p-3 pb-4">
                        <a href="/Host/Event/Overview/@eventItem.EventID" class="btn btn-sm text-white">
                            <i class="fa-solid fa-chart-simple d-block mb-1"></i>Tổng quan
                        </a>
                        <a href="@Url.Action("Index", "Checkin", new { eventId = eventItem.EventID })" class="btn btn-sm text-white">
                            <i class="fa-solid fa-check-to-slot d-block mb-1"></i>Check In
                        </a>
                        <a href="@Url.Action("Index", "Order", new { eventId = eventItem.EventID })" class="btn btn-sm text-white">
                            <i class="fa-solid fa-clipboard-list d-block mb-1"></i>Đơn hàng
                        </a>
                        <a href="@Url.Action("Update", "Event", new { id = eventItem.EventID })" class="btn btn-sm text-white">
                            <i class="fa-solid fa-pen d-block mb-1"></i>Chỉnh sửa
                        </a>
                        <a href="@Url.Action("Display", "Event", new { area = "Host", eventId = eventItem.EventID })" class="btn btn-sm text-white">
                            <i class="fa-solid fa-info d-block mb-1"></i>Chi tiết
                        </a>
                        @if (eventItem.Status != EventStatus.Cancelled)
                        {
                            <button class="btn btn-danger btn-sm btn-cancel text-white" data-event-id="@eventItem.EventID">
                                <i class="fa-regular fa-calendar-xmark d-block mb-1"></i>Hủy
                            </button>
                        }
                    </div>
                </div>
            }

        }
        else
        {
            <div class="alert alert-warning" role="alert">
                Bạn chưa tạo sự kiện nào. <a href="@Url.Action("Add", "Event")" class="alert-link">Tạo sự kiện mới ngay!</a>
            </div>
        }
    </div>

    <!-- Modal xác nhận hủy -->
    <div class="modal fade" id="cancelModal" tabindex="-1" aria-labelledby="cancelModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="cancelModalLabel">Xác nhận hủy</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Đóng"></button>
                </div>
                <div class="modal-body">
                    Bạn có chắc chắn muốn hủy không?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Không</button>
                    <button type="button" id="confirm-cancel" class="btn btn-danger">Đồng ý</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        $(document).ready(function () {
            var eventId;

            $('.btn-cancel').click(function () {
                eventId = $(this).data('event-id');
                $('#cancelModal').modal('show');
            });

            $('#confirm-cancel').click(function () {
                $.ajax({
                    url: '/Host/Event/Cancel',
                    type: 'POST',
                    data: { id: eventId },
                    success: function (response) {
                        if (response.success) {
                            $('#cancelModal').modal('hide');
                            const badge = $(`.badge[data-event-id='${eventId}']`);
                            badge.text('Đã hủy').removeClass().addClass('badge bg-dark status-badge');
                            $(`.btn-cancel[data-event-id='${eventId}']`).hide();
                        } else {
                            alert('Có lỗi xảy ra khi hủy sự kiện!');
                        }
                    },
                    error: function (xhr, status, error) {
                        alert('Lỗi: ' + xhr.status + ' - ' + error);
                    }
                });
            });
        });
    </script>
</body>
</html>
